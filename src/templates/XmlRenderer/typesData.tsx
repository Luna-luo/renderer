// JSON schema is generated using Visual Studio Code Extension "Paste JSON as Code"
// Generated by https://quicktype.io

export interface XmlRendererInterface {
  Invoice: Invoice;
}

export interface Invoice {
  UBLVersionID: string;
  CustomizationID: string;
  ProfileID: string;
  ID: string;
  IssueDate: string;
  DueDate: string;
  InvoiceTypeCode: string;
  DocumentCurrencyCode: string;
  BuyerReference: string;
  AccountingSupplierParty: AccountingErParty;
  AccountingCustomerParty: AccountingErParty;
  PaymentMeans: PaymentMeans;
  PaymentTerms: PaymentTerms;
  TaxTotal: TaxTotal;
  LegalMonetaryTotal: LegalMonetaryTotal;
  InvoiceLine: InvoiceLine[];
}

export interface AccountingErParty {
  Party: Party;
}

export interface Party {
  EndpointID: string;
  PartyIdentification: PartyIdentification;
  PostalAddress: PostalAddress;
  PartyLegalEntity: PartyLegalEntity;
  PartyTaxScheme?: PartyTaxScheme;
}

export interface PartyIdentification {
  ID: string;
}

export interface PartyLegalEntity {
  RegistrationName: string;
}

export interface PartyTaxScheme {
  CompanyID: string;
  TaxScheme: PartyIdentification;
}

export interface PostalAddress {
  StreetName: string;
  AdditionalStreetName: string;
  CityName: string;
  PostalZone: string;
  CountrySubentity: string;
  Country: Country;
}

export interface Country {
  IdentificationCode: string;
}

export interface InvoiceLine {
  ID: string;
  InvoicedQuantity: string;
  LineExtensionAmount: string;
  AllowanceCharge: AllowanceCharge;
  Item: Item;
  Price: Price;
}

export interface AllowanceCharge {
  ChargeIndicator: string;
  AllowanceChargeReasonCode: string;
  AllowanceChargeReason: string;
  MultiplierFactorNumeric: string;
  Amount: string;
  BaseAmount: string;
}

export interface Item {
  Name: string;
  SellersItemIdentification: PartyIdentification;
  ClassifiedTaxCategory: TaxCategory;
}

export interface TaxCategory {
  ID: string;
  Percent: string;
  TaxScheme: PartyIdentification;
}

export interface Price {
  PriceAmount: string;
  BaseQuantity: string;
}

export interface LegalMonetaryTotal {
  LineExtensionAmount: string;
  TaxExclusiveAmount: string;
  TaxInclusiveAmount: string;
  PayableAmount: string;
}

export interface PaymentMeans {
  PaymentMeansCode: string;
  PaymentID: string;
  PayeeFinancialAccount: PayeeFinancialAccount;
}

export interface PayeeFinancialAccount {
  ID: string;
  Name: string;
  FinancialInstitutionBranch: PartyIdentification;
}

export interface PaymentTerms {
  Note: string;
}

export interface TaxTotal {
  TaxAmount: string;
  TaxSubtotal: TaxSubtotal[];
}

export interface TaxSubtotal {
  TaxableAmount: string;
  TaxAmount: string;
  TaxCategory: TaxCategory;
}
